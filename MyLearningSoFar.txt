Let's see if this line can be pushed to github :)

This seems to be working, however the other commits disappear :( perhaps the reason is because I'm only updating the ToDoList.txt and github updates the same file too and
hence drops the commits because of it?

or perhaps because I am doing something wrong, let's see by adding a new file to be committed to my github playground. fingers crossed it goes well.

The readme.md stays on the first commit, as expected, but the ToDoList.txt as well as the testFile.txt change to fifth commit. After some digging around on the github page
I finally understand what is happening. On the "homepage" of my github page it shows all the files and the last commit of each file. Digging into the "Insight" tab I am
able to find the other commits and what exactly has changed, phew :)

Although, now for some reason it seems like my git bash has "crashed" after I checked the logs (it looped the log request a couple of times) and I can't seem to continue and
add "code requests" to bash - this happened last week too :(

pressing Q for some reason helped, was I somehow in a sub program of git and pressing Q quit it and returned me to the normal git bash again?
or did it quit the endless loop of logs it was creating, something to remember for the future - when git seems "stuck" try pressing the Q button.

why is there a kdg file in my local repository though?

strange that git sees a change in file name as a deletion of the old and a creation of the new file rather than just a renaming of that file. OK only after adding it to git does it see it as a renamed file :)

When wanting to push something to github DON'T FORGET to make a commit as otherwise it won't work/upload the updated files!!!

"git push" will just simply push everything to the connected repositories and "git push origin master" will push the specified master

:qa! <Enter> allows you to exit a "commit --amend" or return to the "main" screen

So if you quickly want to check out an older version use: git checkout <the #tag>, if you want to save this point and use it later
use: git checkout -b <ownName>

for some reason the ToDoList.txt (old version) and MyLearningSoFar.txt - even though they are named differently - are linked and 
need to be resolved before the branch and master can be merged together; seems strange to me, but oh well

Also there are two active branches, does this mean I can at all times go back to these "saved" states??? Let's try - makes sense
actually as all committed states are available (palm to face)

when you commit then it gives a summary of how many files changed + if lines were deleted/added - cool

git pull will fetch and merge the differences in the documents being pulled - plus gives a summary of what happened

fetch supposedly only grabs them from the remote repository not sure where they are put (downloaded already somewhere [if so where I don't know]
 or in the copy/paste command [if so not sure how to paste them so I can check for any discrepancies])?

double checked and it seems like you cannot pull a specific file from the remote repo, you can only pull the whole repo - that's a pity